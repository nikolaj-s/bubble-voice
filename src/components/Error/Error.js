// library's
import React from 'react';
import { motion } from 'framer-motion';
import { useSelector } from 'react-redux';

// components
import { TextButton } from "../buttons/textButton/TextButton";

// state 
import { selectPrimaryColor, selectSecondaryColor, selectTextColor } from '../../features/settings/appSettings/appearanceSettings/appearanceSettingsSlice';

// style 
import "./Error.css";

export const Error = ({errorMessage, action, buttonLabel = "Close", position = 'fixed'}) => {

    const primaryColor = useSelector(selectPrimaryColor)

    const textColor = useSelector(selectTextColor);

    const secondaryColor = useSelector(selectSecondaryColor);

    React.useEffect(() => {

        try {
            setTimeout(() => {
                
                document.getElementsByClassName('content-screen-inner-container')[0].scrollTo(0, 0)
                
                document.getElementsByClassName('content-screen-inner-container')[0].style.overflowY = 'hidden'
            }, 10)  
            

        } catch (error) {
            return;
        }

        return () => {
            try {

                document.getElementsByClassName('content-screen-inner-container')[0].style.overflowY = 'auto'

            } catch (error) {
                return;
            }
        }
    }, [])

    return (
        <motion.div 
        onClick={action}
        style={{
            backgroundColor: 'rgba(' + primaryColor.split('rgb(')[1].split(')')[0] + ', 0.8)',
            position: position,
            left: '0px',
            width: '100%'
        }}
        className='error-container' initial={{opacity: 0}} animate={{opacity: 1}} exit={{opacity: 0}} key={"error-componen"}> 
            <div style={{backgroundColor: secondaryColor}} className='inner-error-container' >
                <div
                style={{
                    backgroundColor: primaryColor
                }} 
                className='error-message-container'>
                    <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M50 22.9167V54.1667H41.6667V22.9167H50ZM41.6667 60.4167H50.0167V68.7667H41.6667V60.4167Z" fill={textColor}/>
                    <path d="M45.8333 8.33333C40.9088 8.33333 36.0324 9.3033 31.4827 11.1878C26.933 13.0724 22.799 15.8346 19.3168 19.3168C15.8346 22.799 13.0724 26.933 11.1878 31.4827C9.3033 36.0324 8.33333 40.9088 8.33333 45.8333C8.33333 50.7579 9.3033 55.6343 11.1878 60.184C13.0724 64.7337 15.8346 68.8676 19.3168 72.3498C22.799 75.832 26.933 78.5943 31.4827 80.4788C36.0324 82.3634 40.9088 83.3333 45.8333 83.3333V91.6667C20.5208 91.6667 0 71.1458 0 45.8333C0 20.5208 20.5208 0 45.8333 0C71.1458 0 91.6667 20.5208 91.6667 45.8333H83.3333C83.3333 35.8877 79.3824 26.3494 72.3498 19.3168C65.3172 12.2842 55.7789 8.33333 45.8333 8.33333Z" fill={textColor}/>
                    <path fillRule="evenodd" clipRule="evenodd" d="M86.5761 72.3375C88.3498 72.338 90.0986 71.9192 91.6796 71.1151C93.2607 70.311 94.6292 69.1444 95.6735 67.7107C96.7177 66.2769 97.4082 64.6164 97.6884 62.865C97.9687 61.1135 97.8308 59.3205 97.2861 57.6325C97.0236 56.8225 96.0111 56.655 95.4061 57.2575L88.6761 63.9875C88.521 64.1502 88.321 64.2632 88.1016 64.3122C87.8822 64.3612 87.6531 64.3439 87.4436 64.2625C85.6163 63.5004 84.1629 62.0488 83.3986 60.2225C83.317 60.0125 83.2995 59.7831 83.3485 59.5632C83.3975 59.3433 83.5106 59.143 83.6736 58.9875L90.4086 52.2575C91.0086 51.655 90.8436 50.64 90.0336 50.3775C88.2869 49.8136 86.4287 49.6856 84.6212 50.0047C82.8137 50.3239 81.1117 51.0804 79.6637 52.2084C78.2157 53.3363 77.0657 54.8015 76.314 56.4759C75.5623 58.1504 75.2317 59.9834 75.3511 61.815C75.4886 63.9975 75.0311 66.335 73.3511 67.735L55.2761 82.795C54.5506 83.4013 53.9594 84.152 53.54 84.9993C53.1206 85.8467 52.8822 86.7721 52.8401 87.7166C52.7979 88.6611 52.9529 89.604 53.2951 90.4853C53.6374 91.3667 54.1594 92.1671 54.8279 92.8356C55.4964 93.5041 56.2969 94.0261 57.1782 94.3684C58.0595 94.7106 59.0025 94.8656 59.947 94.8234C60.8915 94.7813 61.8168 94.5429 62.6642 94.1235C63.5115 93.7041 64.2622 93.1129 64.8686 92.3875L79.9286 74.3125C81.3286 72.6325 83.6661 72.175 85.8486 72.3125C86.0886 72.33 86.3311 72.3375 86.5761 72.3375ZM62.8261 87.3375C62.8261 88.0005 62.5627 88.6364 62.0938 89.1052C61.625 89.5741 60.9891 89.8375 60.3261 89.8375C59.663 89.8375 59.0271 89.5741 58.5583 89.1052C58.0894 88.6364 57.8261 88.0005 57.8261 87.3375C57.8261 86.6744 58.0894 86.0385 58.5583 85.5697C59.0271 85.1009 59.663 84.8375 60.3261 84.8375C60.9891 84.8375 61.625 85.1009 62.0938 85.5697C62.5627 86.0385 62.8261 86.6744 62.8261 87.3375Z" fill={textColor}/>
                    <path d="M86.5761 76.0875C87.0086 76.0875 87.4386 76.0699 87.8611 76.0324L97.2461 85.4175C98.4183 86.5897 99.0769 88.1796 99.0769 89.8375C99.0769 91.4953 98.4183 93.0852 97.2461 94.2574C96.0738 95.4297 94.4839 96.0883 92.8261 96.0883C91.1683 96.0883 89.5783 95.4297 88.4061 94.2574L77.3811 83.2324L82.8111 76.715C82.9411 76.5575 83.1786 76.37 83.6661 76.225C84.2992 76.058 84.9563 76.0013 85.6086 76.0574C85.9286 76.0774 86.2511 76.0875 86.5761 76.0875ZM65.3261 58.8024L71.1511 64.6274C71.0947 64.711 71.0275 64.7867 70.9511 64.8524L67.3261 67.8724L61.7911 62.3374H58.5986C58.3666 62.3374 58.1393 62.2729 57.9419 62.151C57.7445 62.0292 57.585 61.8548 57.4811 61.6474L53.2311 53.1424C53.1136 52.908 53.0729 52.6426 53.1146 52.3837C53.1563 52.1248 53.2784 51.8856 53.4636 51.6999L54.6886 50.4749C54.874 50.2894 55.113 50.1668 55.3719 50.1247C55.6308 50.0825 55.8964 50.1228 56.1311 50.2399L64.6361 54.4899C64.8442 54.5942 65.0191 54.7546 65.141 54.9529C65.2629 55.1512 65.327 55.3797 65.3261 55.6124V58.8024Z" fill={textColor}/>
                    </svg>
                    <p
                    style={{color: textColor}}
                    >{errorMessage}</p>
                </div>
                <TextButton action={action} name={buttonLabel} />
            </div>
        </motion.div>
    )
}
